// Import necessary modules
const { NodeSDK } = require('@opentelemetry/sdk-node');
const { JaegerExporter } = require('@opentelemetry/exporter-jaeger');
const { BatchSpanProcessor } = require('@opentelemetry/sdk-trace-base');
const express = require('express');
const cors = require('cors');
const client = require('prom-client');
require('dotenv').config();

// Initialize OpenTelemetry tracing
const jaegerExporter = new JaegerExporter({
    endpoint: 'http://172.17.0.8:14268/api/traces', // Update with your Jaeger endpoint
});

const sdk = new NodeSDK({
    traceExporter: jaegerExporter,
    spanProcessor: new BatchSpanProcessor(jaegerExporter),
});

sdk.start();
console.log('Tracing initialized');

// Initialize Prometheus metrics
const collectDefaultMetrics = client.collectDefaultMetrics;
collectDefaultMetrics();

const httpRequestCounter = new client.Counter({
    name: 'http_requests_total',
    help: 'Total number of HTTP requests',
    labelNames: ['method', 'route', 'status_code'],
});

// Create Express app
const app = express();
const PORT = process.env.PORT || 3002;

// Middleware
app.use(cors());
app.use(express.json());
app.use((req, res, next) => {
    res.on('finish', () => {
        httpRequestCounter.labels(
            req.method,
            req.route ? req.route.path : req.path,
            res.statusCode
        ).inc();
    });
    next();
});

// Database connection
const conn = require('./conn');

// Routes
const tripRoutes = require('./routes/trip.routes');
app.use('/trips', tripRoutes);

// Metrics endpoint
app.get('/metrics', async (req, res) => {
    res.set('Content-Type', client.register.contentType);
    res.end(await client.register.metrics());
});

// Root endpoint
app.get('/', (req, res) => {
    res.send('Welcome to the TravelMemory backend!');
});

// Start server
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
